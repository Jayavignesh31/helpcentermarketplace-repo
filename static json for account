givenStatus = {"Open","On Hold","Local Testing completed","Developer Unavailability","In progress in local","Verification InProgress","Latest merge Request","In progress in Presetup","AutomationServer unavailability","Migration In Progress","Waiting for Migration","Automation completed","Automation is in progress","Waiting for automation","Bugs Fixed","Appserver unavailability","Local Update","Round Completed","Latest merge requested"};
staticModuleRelations = [
  {
    "accountOwner": "R.Karthick",
    "moduleName": "Integration",
    "accountOwnerZuid": [
      733621
    ],
    "groupIds": [
      119027000028682253
    ]
  },
  {
    "accountOwner": "Emil chacko",
    "moduleName": "Marketplace",
    "accountOwnerZuid": [
      6232620
    ],
    "groupIds": [
      119027000046916389
    ]
  },
  {
    "accountOwner": "Emil chacko",
    "moduleName": "API",
    "accountOwnerZuid": [
      6232620
    ],
    "groupIds": [
      119027000028682233
    ]
  },
  {
    "accountOwner": "Ebbu Abraham",
    "moduleName": "Automation",
    "accountOwnerZuid": [
      5834385
    ],
    "groupIds": [
      119027000007604026
    ]
  },
  {
    "accountOwner": "Ebbu Abraham",
    "moduleName": "Security",
    "accountOwnerZuid": [
      5834385
    ],
    "groupIds": [
      119027000008233001
    ]
  },
  {
    "accountOwner": "Senthamil Bharathi",
    "moduleName": "I18N and SAS Team ",
    "accountOwnerZuid": [
      288463
    ],
    "groupIds": [
      119027000046916489
    ]
  },
  {
    "accountOwner": "Vijay Anand",
    "moduleName": "Internal Migration",
    "accountOwnerZuid": [
      1995187
    ],
    "groupIds": [
      119027000028682311
    ]
  },
  {
    "accountOwner": "Manojkumar.S",
    "moduleName": "Layout & Fields",
    "accountOwnerZuid": [
      24467262
    ],
    "groupIds": [
      119027000027819013
    ]
  },
  {
    "accountOwner": "Manimekalai",
    "moduleName": "Mail Team",
    "accountOwnerZuid": [
      2295305
    ],
    "groupIds": [
      119027000037548666
    ]
  },
  {
    "accountOwner": "Kumaresan.S",
    "moduleName": "Client",
    "accountOwnerZuid": [
      1251348
    ],
    "groupIds": [
      119027000046916517,
      119027000022669308
    ]
  },
  {
    "accountOwner": "Vijay Anand",
    "moduleName": "Custom views and Realtime",
    "accountOwnerZuid": [
      1995187
    ],
    "groupIds": [
      119027000028682205
    ]
  },
  {
    "accountOwner": "Vignesh.S",
    "moduleName": "Reports and Dashboard",
    "accountOwnerZuid": [
      631136517
    ],
    "groupIds": [
      119027000006383137
    ]
  },
  {
    "accountOwner": "Dineshkumar",
    "moduleName": "Telephony & Activity",
    "accountOwnerZuid": [
      2398631
    ],
    "groupIds": [
      119027000028682331
    ]
  },
  {
    "accountOwner": "stephen kirubaharan_Yuvi_Srini",
    "moduleName": "Tickets,Customers & Product",
    "accountOwnerZuid": [
      28818067
    ],
    "groupIds": [
      119027000028682273
    ]
  },
  {
    "accountOwner": "vimalesan_Elavarasan",
    "moduleName": "UI/UX Team",
    "accountOwnerZuid": [
      8237519,
      45496198
    ],
    "groupIds": [
      119027000046916599
    ]
  },
  {
    "accountOwner": "Ashutosh",
    "moduleName": "Signup,Users",
    "accountOwnerZuid": [
      24465552
    ],
    "groupIds": [
      119027000018239001
    ]
  },
  {
    "accountOwner": "Raisudeen",
    "moduleName": "Zia & GC",
    "accountOwnerZuid": [
      4276511
    ],
    "groupIds": [
      119027000046916441
    ]
  },
  {
    "accountOwner": "Suresh.VM",
    "moduleName": "User Migration",
    "accountOwnerZuid": [
      35092491
    ],
    "groupIds": [
      119027000046916461
    ]
  },
  {
    "accountOwner": "Sathya",
    "moduleName": "Social and Chat",
    "accountOwnerZuid": [

    ],
    "groupIds": [
      119027000034892045
    ]
  },
  {
    "accountOwner": "Kannapiran",
    "moduleName": "Helpcenter",
    "accountOwnerZuid": [

    ],
    "groupIds": [
      "119027000006383085"
    ]
  }
];
//mm=Collection();
a=0;b=0;
tableGroup = Collection();
for each jsongen in staticModuleRelations
{
	jsonFormat = {"name":null,"tickets":{},"count":0};
	//ticket grouping
	jsonFormat.put("name",jsongen.get("moduleName"));
	//secondary for loop
	ticketGroup = Collection();
	secondLoop=jsongen.get('groupIds');
	for each accountId in secondLoop
    {
		getTicket = invokeurl
		[
			url :"https://desk.zoho.com/api/v1/accounts/" + accountId + "/tickets"
			type :GET
			parameters:{"limit":15,"departmentId":119027000000126064,"include":"contacts,assignee","sortBy":"-createdTime"}
			connection:"jaiconnecttest"
		];
		if(!getTicket.isEmpty())
		{
			ticketCollect = getTicket.get("data");
			//third for loop
		i = 0;
		for each  statuscheck in ticketCollect
		{
			jsonSubFormat = Map();
			//jsonSubFormat = {"id":0,"url":"","subject":"","developer":"","qaOwner":"","status":""};
			if(givenStatus.containsValue(statuscheck.get('status')))
			{
				jsonSubFormat.put("id",statuscheck.get('ticketNumber'));
				jsonSubFormat.put("url",statuscheck.get('webUrl'));
				jsonSubFormat.put("subject",statuscheck.get('subject'));
				if(statuscheck.get('assignee').get('firstName') != null)
				{
					jsonSubFormat.put("qaOwner",statuscheck.get('assignee').get('firstName') + " " + statuscheck.get('assignee').get('lastName'));
				}
				else
				{
					jsonSubFormat.put("qaOwner",statuscheck.get('assignee').get('lastName'));
				}
				if(statuscheck.get('contact').get('firstName') != null)
				{
					jsonSubFormat.put("developer",statuscheck.get('contact').get('firstName') + " " + statuscheck.get('contact').get('lastName'));
				}
				else
				{
					jsonSubFormat.put("developer",statuscheck.get('contact').get('lastName'));
				}
				jsonSubFormat.put("status",statuscheck.get('status'));
				ticketGroup.insert(jsonSubFormat);
				i = i + 1;
				jsonFormat.put("count",i);
			}
		}
		i = 0;
		}
    }
	jsonFormat.put("tickets",ticketGroup);
	tableGroup.insert(jsonFormat);
}
info tableGroup;
