sdays = {'sunday','monday','tuesday','wednesday','thursday','friday','saturday'};
ranked = {'Unplanned','first','second','third','fourth','fifth'};
sectionIdOnDays = {1,105000216401074,105000216401078,105000216401080,105000216380992,105000282286212,1};
currentDate = toString(now,"dd-MM-yyyy","Asia/Calcutta").getDayOfWeek() + 4;
//replace today
response = invokeurl
[
	url :"https://connect.zoho.com/pulse/nativeapi/sectionTasks"
	type :GET
	parameters:{"scopeID":105000017039001,"boardId":105000216380978,"sectionId":sectionIdOnDays.get(currentDate)}
	connection:"jaiconnecttest"
];
processJsonUptoTask = response.get('sectionTasks').get('tasks');
finalizedJson = Map();
groupingSubJson = Collection();
if(response.get('sectionTasks').isEmpty())
{
	finalizedJson.put('subject',"Still,we aren't planned any builds.will plann soon");
	finalizedJson.put('releasenotes',null);
	finalizedJson.put('tags',Collection());
}
else
{
	for each index item in processJsonUptoTask
	{
		finalizedSubJson = Map();
		/////subject key-value putting
		finalizedSubJson.put('subject',processJsonUptoTask.get(item).get('title').get(0).get('text'));
		///ticket-url construction
		if(finalizedSubJson.get('subject').matches("[#]{1}[a-zA-Z0-9\s~`!@#$%^&*()_+{}|:\"<>?\-=\\;\',.\/]*"))
		{
			ticketId = finalizedSubJson.get('subject').getPrefix(' ').remove('#');
			ticketsearch = invokeurl
			[
				url :"https://desk.zoho.com/api/v1/tickets/search"
				type :GET
				parameters:{"ticketNumber":ticketId}
				connection:"jaiconnecttest"
			];
			if(ticketsearch.isEmpty())
			{
				finalizedSubJson.put('ticketUrl',null);
			}
			else
			{
				finalizedSubJson.put('ticketUrl',ticketsearch.get('data').get(0).get('webUrl'));
			}
		}
		else
		{
			finalizedSubJson.put('ticketUrl',null);
		}
		///
		/////releasenotes key-value putting
		if(processJsonUptoTask.get(item).containKey('desc'))
		{
			finalizedSubJson.put('releasenotes',processJsonUptoTask.get(item).get('desc').get(0).get('linkUrl'));
		}
		else
		{
			finalizedSubJson.put('releasenotes',null);
		}
		/////tags key-value putting
		if(processJsonUptoTask.get(item).containKey('tags'))
		{
			finalizedSubTagColection = Collection();
			subLoop = processJsonUptoTask.get(item).get('tags');
			for each index tagindex in subLoop
			{
				finalizedSubTagColection.insert(subLoop.get(tagindex).get('name'));
			}
			finalizedSubJson.put('tags',finalizedSubTagColection);
		}
		else
		{
			finalizedSubJson.put('tags',Collection());
		}
		//ordernumber finding
		k5 = finalizedSubJson.get('tags');
		if(k5.isEmpty())
		{
			finalizedSubJson.put('orderNo',0);
		}
		else
		{
			finalizedSubJson.put('orderNo',0);
			for each index orderindex in ranked
			{
				if(k5.containsValue(sdays.get(currentDate) + '-' + ranked.get(orderindex) + '-build') || k5.containsValue(sdays.get(currentDate) + '_' + ranked.get(orderindex) + '_build'))
				{
					finalizedSubJson.put('orderNo',orderindex);
				}
			}
		}
		//
		/////
		////////Adding each task to finalizedJson
		groupingSubJson.insert(finalizedSubJson);
	}
	finalizedJson.put("data",groupingSubJson);
}
//info finalizedJson;
////------------>API Part Done<------------------------
///cliq side handling
cliqMsgJson = {"text":"Hai team Good mrg,Here's the list for today release builds.","bot":{"name":"DESK-QA","image":"https://e7.pngegg.com/pngimages/637/297/png-clipart-rocket-logo-rocket-blue-logo.png"},"card":{"theme":"modern-inline"},"slides":{}};
slideJson = {"type":"text","title":"","data":"","buttons":{}};
buttonJsonR = {"label":"Release notes","type":"+","action":{"type":"open.url","data":{"web":""}}};
buttonJsonT = {"label":"Ticket URL","type":"+","action":{"type":"open.url","data":{"web":""}}};
cliqloop = finalizedJson.get('data');
none = Collection();
first = Collection();
second = Collection();
third = Collection();
fourth = Collection();
fifth = Collection();
for each index cliqslideindex in cliqloop
{
	buttonGroup = Collection();
	slideJson.put('data',cliqloop.get(cliqslideindex).get('subject') + '\n[Tags:' + cliqloop.get(cliqslideindex).get('tags') + ']');
	slideJson.put('title',ranked.get(cliqloop.get(cliqslideindex).get('orderNo')) + '-build');
	if(cliqloop.get(cliqslideindex).get('releasenotes') != null)
	{
		br = buttonJsonR.get('action').get('data');
		br.put('web',cliqloop.get(cliqslideindex).get('releasenotes'));
		buttonGroup.insert(buttonJsonR);
	}
	if(cliqloop.get(cliqslideindex).get('ticketUrl') != null)
	{
		bt = buttonJsonT.get('action').get('data');
		bt.put('web',cliqloop.get(cliqslideindex).get('ticketUrl'));
		buttonGroup.insert(buttonJsonT);
	}
	//info buttonGroup;
	//info slideJson;
	slideJson.put('buttons',buttonGroup);
}
xsam=zoho.cliq.postToChat("CT_2243209938789583353_64396901",slideJson,"jaiconnecttest");
info xsam;
